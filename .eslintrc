{
  "env": {
    "node": true,
    "browser": true
  },
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "plugins": ["@typescript-eslint"],
  "settings": {
    "import/no-unresolved": "off",
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "react": {
      "version": "17.0.2"
    }
  },
  "rules": {
    "@typescript-eslint/ban-ts-comment": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "additionalHooks": "useRecoilCallback"
      }
    ],
    "import/no-named-as-default-member": "off",
    "comma-dangle": ["error", "always-multiline"],
    "@typescript-eslint/semi": ["error"],
    "@typescript-eslint/quotes": ["error", "single"],
    "eol-last": ["error", "always"],
    "no-trailing-spaces": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 0,
        "maxBOF": 0
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "_"
      }
    ],
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "react/prop-types": "off",
    "react/state-in-constructor": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-key": "warn",
    "react/display-name": "off",
    "import/named": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true,
        "peerDependencies": true
      }
    ],
    "import/no-named-as-default": "off",
    "import/prefer-default-export": "off",
    "import/order": [
      "error",
      {
        "groups": [["external", "builtin"], ["internal"], ["parent", "index", "sibling"]],
        "pathGroups": [
          {
            "pattern": "~/**",
            "group": "internal"
          }
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}
